// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:root@localhost:5432/street2"
}


model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String
  username String
  password String
  picture String?
  dateOfBirth DateTime?
  questions   Question[]
  cart Product[] @relation("cart")
  favList Product[] @relation("favList")
  favoriteBrands Brand[]
  favoriteArtists Artist[]
  comments Comment[]
  
}

model Artist {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String
  username String
  password String
  bio String?
  profilePic String?
  coverPic String?
  dateOfBirth DateTime?
  posts   Post[]
  followers User[]
  
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  picture String
  artist    Artist     @relation(fields: [artistId], references: [id])
  artistId  Int
  comments Comment[]
}

model Brand {
  id      Int      @id @default(autoincrement())
  name String
  picture String
  collections Collection[]
  followers User[]
}

model Collection {
  id      Int      @id @default(autoincrement())
  name String
  brand    Brand     @relation(fields: [brandId], references: [id])
  brandId  Int
  products Product[]
}

model Product {
  id      Int      @id @default(autoincrement())
  name String
  price Float
  isNew Boolean @default(true)
  pictures String[]
  collection    Collection     @relation(fields: [collectionId], references: [id])
  collectionId  Int
  clients User[] @relation("cart")
  users User[] @relation("favList")


}

model Question {
  id      Int      @id @default(autoincrement())
  question  String
  user    User     @relation(fields: [userId], references: [id])
  userId Int
}

model Comment {
  id      Int      @id @default(autoincrement())
  content String
  user    User     @relation(fields: [userId], references: [id])
  userId Int
  post    Post     @relation(fields: [postId], references: [id])
  postId Int

}

